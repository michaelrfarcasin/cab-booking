x-frontend-origin-url: &frontend-origin-url
    http://localhost:3000

x-auth-db-user: &auth-db-user
    auth-user

x-auth-db-password: &auth-db-password
    dummypassword

x-booking-db-user: &booking-db-user
    booking-user

x-booking-db-password: &booking-db-password
    dummypassword

services:
    mysql-auth:
        image: mysql:8-oracle
        restart: always
        ports:
            - "3307:3306"
        networks:
            - cab-booking
        environment:
            MYSQL_DATABASE: auth-database
            MYSQL_ROOT_PASSWORD: dummypassword
            MYSQL_USER: *auth-db-user
            MYSQL_PASSWORD: *auth-db-password
        volumes:
            - ./mysql/auth/sql-scripts:/docker-entrypoint-initdb.d
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            interval: 5s
            timeout: 5s
            retries: 10
    mysql-booking:
        image: mysql:8-oracle
        restart: always
        ports:
            - "3308:3306"
        networks:
            - cab-booking
        environment:
            MYSQL_DATABASE: booking-database
            MYSQL_ROOT_PASSWORD: dummypassword
            MYSQL_USER: *booking-db-user
            MYSQL_PASSWORD: *booking-db-password
        volumes:
            - ./mysql/booking/sql-scripts:/docker-entrypoint-initdb.d
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            interval: 5s
            timeout: 5s
            retries: 10
    cab-frontend:
        build: 
            context: ./frontend
            dockerfile: ./Dockerfile
        ports:
            - "3000:3000"
        networks:
            - cab-booking
    auth-service:
        build: 
            context: ./backend/auth-service
            dockerfile: ./Dockerfile
        ports:
            - "8081:8080"
        networks:
            - cab-booking
        depends_on:
            mysql-auth:
                condition: service_healthy
        environment:
            DB_URL: jdbc:mysql://mysql-auth:3306/auth-database
            RDS_USERNAME: *auth-db-user
            RDS_PASSWORD: *auth-db-password
            FRONTEND_ORIGIN: *frontend-origin-url
        volumes:
            - ./secrets/jwt_secret:/run/secrets/jwt_secret:ro
    booking-service:
        build: 
            context: ./backend/booking-service
            dockerfile: ./Dockerfile
        ports:
            - "8082:8080"
        networks:
            - cab-booking
        depends_on:
            mysql-booking:
                condition: service_healthy
        environment:
            DB_URL: jdbc:mysql://mysql-booking:3306/booking-database
            RDS_USERNAME: *booking-db-user
            RDS_PASSWORD: *booking-db-password
            FRONTEND_ORIGIN: *frontend-origin-url
        volumes:
            - ./secrets/jwt_secret:/run/secrets/jwt_secret:ro

networks:
    cab-booking: